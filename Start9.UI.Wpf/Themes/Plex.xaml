<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Start9.UI.Wpf"
                    xmlns:conv="clr-namespace:Start9.UI.Wpf.Converters"
                    xmlns:sys="clr-namespace:System;assembly=System">
    <ResourceDictionary.MergedDictionaries>
        <!--ResourceDictionary Source="pack://application:,,,/Start9.Api;component/Themes/Generic.xaml"/-->
        <ResourceDictionary Source="pack://application:,,,/Start9.UI.Wpf;component/Themes/Colors/LightPlexBlue.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region Converters-->

    <conv:DoubleToFractionOfDoubleConverter x:Key="DoubleToFractionOfDoubleConverter"/>
    <!--conv:GetResourceForImageBrushConverter x:Key="GetResourceForImageBrushConverter"/-->

    <!--#endregion Converters-->

    <ImageBrush x:Key="IceIconFrame" ImageSource="{Binding Converter={StaticResource GetResourceForImageBrushConverter}}"/>



    <!--#region Focus Visuals-->

    <Style x:Key="PlexFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="true" BorderBrush="{DynamicResource FocusVisualBorderBrush}"
                            Background="Transparent" Margin="1">
                        <Border BorderThickness="2" CornerRadius="2" SnapsToDevicePixels="True" Background="Transparent" BorderBrush="{DynamicResource FocusVisualLinearGradientBrush}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexRoundFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Ellipse StrokeThickness="1" SnapsToDevicePixels="true" Stroke="{DynamicResource FocusVisualBorderBrush}" Fill="Transparent" />
                        <Ellipse StrokeThickness="2" SnapsToDevicePixels="true" Fill="Transparent" Margin="1" Stroke="{DynamicResource FocusVisualLinearGradientBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Focus Visuals-->



    <!--#region Path Styles-->

    <Style x:Key="IconPathStyle" TargetType="Path">
        <Setter Property="Stroke" Value="{DynamicResource IconPathStrokeBrush}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Fill" Value="{DynamicResource IconPathFillBrush}"/>
    </Style>

    <!--#endregion Path Styles-->


    <!--#region Icons-->

    <Path x:Key="SmallBackArrowPathIcon" Data="M 0 7 L 8 0 L 10 0 L 10 14 L 8 14 Z" Style="{DynamicResource IconPathStyle}"/>

    <Path x:Key="LargeBackArrowPathIcon" Data="M 0 11 L 12 0 L 15 0 L 15 21 L 12 21 Z" Style="{DynamicResource IconPathStyle}"/>

    <Path x:Key="SmallForwardArrowPathIcon" Data="M 10 7 L 2 0 L 0 0 L 0 14 L 2 14 Z" Style="{DynamicResource IconPathStyle}"/>

    <Path x:Key="LargeForwardArrowPathIcon" Data="M 15 11 L 3 0 L 0 0 L 0 21 L 3 21 Z" Style="{DynamicResource IconPathStyle}"/>

    <!--#endregion Icons-->


    <!--#region Window Styles-->

    <!--#endregion Window Styles-->

    <!--#region ToolTip Styles-->

    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource TooltipForegroundBrush}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{DynamicResource TooltipBackgroundBrush}" BorderBrush="{DynamicResource TooltipBorderBrush}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ToolTip Styles-->


    <!--#region Thumb Styles-->

    <Style x:Key="BorderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle MinWidth="4" MinHeight="4" StrokeThickness="0">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="#01000000" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Thumb Styles-->


    <!--#region ResizeGrip Styles-->

    <Style x:Key="{x:Type ResizeGrip}" TargetType="{x:Type ResizeGrip}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Cursor" Value="SizeNWSE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid>

                        <Ellipse HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" />
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="0,-1,0,1" />
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="-3,-2,3,2" />
                        <Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="-2,1,2,-1" />
                        <Ellipse HorizontalAlignment="Right" VerticalAlignment="Top" Width="5" Height="5" Fill="{DynamicResource ResizeGripCircleBackgroundBrush}" Stroke="{DynamicResource ResizeGripCircleBorderBrush}" StrokeThickness="1" Margin="-1,0.5,1,-0.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Resize Grip Styles-->


    <!--#region Button Styles-->

    <Style x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="6,6,10,10" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                        </Grid.Effect>
                        <Border x:Name="IdleBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="{DynamicResource StandardButtonIdleBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonIdleBorderBrush}"/>
                        <Border x:Name="PressedBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonPressedBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonPressedBorderBrush}" />
                        <Border x:Name="SecondaryBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonTertiaryBackgroundBrush}" BorderBrush="Transparent"/>
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="1" Margin="3,2,3,3" Padding="0" Opacity="0" BorderBrush="{DynamicResource StandardButtonHoverBorderBrush}" Background="Transparent">
                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource StandardButtonHoverGlowBrush}"/>
                        </Border>
                        <Border x:Name="TertiaryBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonSenaryBackgroundBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0"
                                Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonDisabledPrimaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledPrimaryBorderBrush}">
                        </Border>
                        <Border x:Name="DisabledSecondaryBackground" BorderThickness="1" CornerRadius="3" Margin="0"
                                Padding="0" Visibility="Visible" Opacity="0" Background="Transparent"
                                BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonDisabledSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0"
                                        Background="Transparent" BorderBrush="{DynamicResource StandardButtonDisabledTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0"
                                                Background="{DynamicResource StandardButtonDisabledTertiaryBackgroundBrush}" BorderBrush="Transparent" />
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonDisabledQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RepeatButton}" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="6,6,10,10" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                        </Grid.Effect>
                        <Border x:Name="IdleBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="{DynamicResource StandardButtonIdleBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonIdleBorderBrush}"/>
                        <Border x:Name="PressedBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonPressedBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonPressedBorderBrush}" />
                        <Border x:Name="SecondaryBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonTertiaryBackgroundBrush}" BorderBrush="Transparent"/>
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="1" Margin="3,2,3,3" Padding="0" Opacity="0" BorderBrush="{DynamicResource StandardButtonHoverBorderBrush}" Background="Transparent">
                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource StandardButtonHoverGlowBrush}"/>
                        </Border>
                        <Border x:Name="TertiaryBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonSenaryBackgroundBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0"
                                Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonDisabledPrimaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledPrimaryBorderBrush}">
                        </Border>
                        <Border x:Name="DisabledSecondaryBackground" BorderThickness="1" CornerRadius="3" Margin="0"
                                Padding="0" Visibility="Visible" Opacity="0" Background="Transparent"
                                BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonDisabledSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0"
                                        Background="Transparent" BorderBrush="{DynamicResource StandardButtonDisabledTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0"
                                                Background="{DynamicResource StandardButtonDisabledTertiaryBackgroundBrush}" BorderBrush="Transparent" />
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonDisabledQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <!--Setter Property="Margin" Value="6,6,11,10" /-->
        <!--Setter Property="Padding" Value="0" /-->
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexRoundFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="1">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdlePrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="DisabledBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledTertiaryFillBrush}"/>
                        </Grid>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexToolbarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <ContentControl Background="#01000000" Content="{TemplateBinding Content}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Button Styles-->


    <!--#region ToggleButton Styles-->

    <Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="6,6,10,10" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.Effect>
                            <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="320" ShadowDepth="3" BlurRadius="10" Opacity="0.5" />
                        </Grid.Effect>
                        <Border x:Name="IdleBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="{DynamicResource StandardButtonIdleBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonIdleBorderBrush}"/>
                        <Border x:Name="PressedBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonPressedBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonPressedBorderBrush}" />
                        <Border x:Name="SecondaryBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="1" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonTertiaryBackgroundBrush}" BorderBrush="Transparent"/>
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" BorderThickness="1" CornerRadius="1" Margin="3,2,3,3" Padding="0" Opacity="0" BorderBrush="{DynamicResource StandardButtonHoverBorderBrush}" Background="Transparent">
                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource StandardButtonHoverGlowBrush}"/>
                        </Border>
                        <Border x:Name="TertiaryBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0" Visibility="Visible" Opacity="0" Background="Transparent" BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0" Background="Transparent" BorderBrush="{DynamicResource StandardButtonSenaryBackgroundBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="DisabledBackground" BorderThickness="1" CornerRadius="3" Margin="0" Padding="0"
                                Visibility="Visible" Opacity="0" Background="{DynamicResource StandardButtonDisabledPrimaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledPrimaryBorderBrush}">
                        </Border>
                        <Border x:Name="DisabledSecondaryBackground" BorderThickness="1" CornerRadius="3" Margin="0"
                                Padding="0" Visibility="Visible" Opacity="0" Background="Transparent"
                                BorderBrush="Transparent">
                            <Border BorderThickness="1" CornerRadius="2" Margin="1,0,1,1" Padding="0" Background="{DynamicResource StandardButtonDisabledSecondaryBackgroundBrush}" BorderBrush="{DynamicResource StandardButtonDisabledSecondaryBorderBrush}">
                                <Border BorderThickness="1" CornerRadius="1" Margin="0" Padding="0"
                                        Background="Transparent" BorderBrush="{DynamicResource StandardButtonDisabledTertiaryBorderBrush}">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0"
                                                Background="{DynamicResource StandardButtonDisabledTertiaryBackgroundBrush}" BorderBrush="Transparent" />
                                        <Border BorderThickness="0" CornerRadius="1" Margin="0" Padding="0" Background="{DynamicResource StandardButtonDisabledQuarternaryBackgroundBrush}" BorderBrush="Transparent"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.25"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0.875"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="SecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth" To="3"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DropShadow"
                                                         Storyboard.TargetProperty="Opacity" To="0.5"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="TertiaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledSecondaryBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="6,6,11,10" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexRoundFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="IdleBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="1">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdlePrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonIdleTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="HoverBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonHoverTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="PressedBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonPressedTertiaryFillBrush}"/>
                        </Grid>
                        <Grid x:Name="DisabledBackground" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              Margin="0" Background="Transparent" Opacity="0">
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledPrimaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledSecondaryFillBrush}"/>
                            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Fill="{DynamicResource RoundButtonDisabledTertiaryFillBrush}"/>
                        </Grid>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IdleBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexToolbarToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="SelectedBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexGlowToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="HoverBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="SelectedBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" UseLayoutRounding="True">
                            <ContentControl.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </ContentControl.Effect>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexGlowInverseToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border x:Name="HoverBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="SelectedBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Focusable="False" IsTabStop="False" UseLayoutRounding="True">
                            <ContentControl.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </ContentControl.Effect>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ToggleButton Styles-->


    <!--#region ListView Styles-->

    <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <Border x:Name="SelectedBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border BorderThickness="0" BorderBrush="Transparent" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid>
                                <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Hidden"/>
                                <GridViewRowPresenter x:Name="PART_GridViewRowPesenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Visible" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_GridViewRowPesenter" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ListView Styles-->


    <!--#region Menu Styles-->

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="White" BorderThickness="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Border Name="Border" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
            <Grid Margin="0,0,10,0">
                <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0" Margin="0,0,-10,0">
                    <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                        <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                    </Border>
                </Border>
                <Grid Margin="0,0,7,0">
                    <ContentPresenter Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                </Grid>
                <Path Margin="-7,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 6 6 L 0 12 L 4 6 Z" Fill="{TemplateBinding Foreground}" />

                <Popup Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Grid Margin="8,3,3,5">
                        <Border IsHitTestVisible="False" Background="Black" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderThickness="1" CornerRadius="0" Margin="0" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource ContextMenuBackgroundBrush}" BorderBrush="{DynamicResource ContextMenuBorderBrush}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="-7,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border Name="Border" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#01000000">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                    <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                        <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                    </Border>
                </Border>
                <Label x:Name="Check" FontFamily="Marlett" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0" Foreground="{TemplateBinding Foreground}" Visibility="Hidden">b</Label>
                <Grid x:Name="CheckOffsetGrid" Margin="0">
                    <ContentPresenter Name="Content" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonDisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckOffsetGrid" Property="Margin" Value="12,0,0,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Height" Value="25" />
        <Setter Property="MinWidth" Value="175"/>
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="#01000000" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Margin" Value="0,0,0,3" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PlexMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}"/>

    <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource PlexMenuItemStyle}"/>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Margin" Value="5,0,0,5"/>
        <Setter Property="Padding" Value="3,3,3,0"/>
        <Setter Property="HasDropShadow" Value="False" />
        <!--Setter Property="ItemContainerStyle" Value="{DynamicResource PlexMenuItemStyle}"/-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border IsHitTestVisible="False" Background="Black" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderThickness="1" CornerRadius="2" Margin="0" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource ContextMenuBackgroundBrush}" BorderBrush="{DynamicResource ContextMenuBorderBrush}">
                            <ScrollViewer SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" ClipToBounds="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type local:TouchableContextMenu}" TargetType="{x:Type local:TouchableContextMenu}">
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource PlexMenuItemStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=OpenedWithTouch, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:TouchableContextMenu}}}" Value="True">
                        <Setter Property="Height" Value="46.590925" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--Style TargetType="Separator" BasedOn="{x:Type Separator}"/-->
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Margin" Value="5,0,0,5"/>
        <Setter Property="Padding" Value="3,3,3,0"/>
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Border IsHitTestVisible="False" Background="Black" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect x:Name="DropShadow" Color="Black" Direction="230" ShadowDepth="3" BlurRadius="3" Opacity="0.375"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderThickness="1" CornerRadius="0" Margin="0" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource ContextMenuBackgroundBrush}" BorderBrush="{DynamicResource ContextMenuBorderBrush}">
                            <ScrollViewer SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" ClipToBounds="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Grid>
                            <Border x:Name="ToolBarBorder" CornerRadius="8,8,0,0" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource WindowToolbarBackgroundBrush}" BorderBrush="{DynamicResource WindowToolbarBorderBrush}">
                                <Border x:Name="ToolBarSecondaryBorder" CornerRadius="8,8,0,0"
                                                    BorderThickness="0,1,0,0" Background="{DynamicResource WindowToolbarSecondaryBackgroundBrush}"
                                                    BorderBrush="{DynamicResource WindowToolbarSecondaryBorderBrush}" />
                            </Border>
                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="0" Background="{DynamicResource WindowToolbarBackgroundBrush}"/>
                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="1" Background="{DynamicResource WindowToolbarTertiaryBackgroundBrush}"/>
                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="2" Background="{DynamicResource WindowToolbarQuarternaryBackgroundBrush}"/>
                        </Grid>
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Menu Styles-->


    <!--#region TextBox Styles-->

    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border Name="OuterBorder" CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" Background="{DynamicResource TextBoxPrimaryBackgroundBrush}" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}"/>
                        <Border CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" BorderBrush="Transparent" ClipToBounds="True">
                            <Border x:Name="ClipBorder" CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="0" Padding="0" Background="Transparent" BorderBrush="Transparent" ClipToBounds="True">
                                <Grid>
                                    <Grid x:Name="ClipGrid" Margin="0" ClipToBounds="True">
                                        <Grid.OpacityMask>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Border Background="White" SnapsToDevicePixels="True" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Grid.OpacityMask>
                                        <Grid x:Name="IdleEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0.25">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                            </Grid.ColumnDefinitions>
                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                                                <Canvas.Background>
                                                    <RadialGradientBrush RadiusX="1.125" Center="1,0.5" GradientOrigin="1,0.5" GradientStops="{DynamicResource TextBoxGlowRadialGradientStops}"/>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxGlowLinearGradientStops}"/>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                                                <Canvas.Background>
                                                    <RadialGradientBrush RadiusX="1.125" Center="0,0.5" GradientOrigin="0,0.5" GradientStops="{DynamicResource TextBoxGlowRadialGradientStops}"/>
                                                </Canvas.Background>
                                            </Canvas>
                                        </Grid>
                                        <Grid x:Name="HoverEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0" ClipToBounds="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                            </Grid.ColumnDefinitions>
                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                                                <Canvas.Background>
                                                    <RadialGradientBrush RadiusX="1.125" Center="1,0.5" GradientOrigin="1,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowLinearGradientStops}"/>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                                                <Canvas.Background>
                                                    <RadialGradientBrush RadiusX="1.125" Center="0,0.5" GradientOrigin="0,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                                </Canvas.Background>
                                            </Canvas>
                                        </Grid>
                                    </Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </Border>
                        </Border>
                        <Border CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" Background="Transparent" BorderBrush="{DynamicResource TextBoxSecondaryBorderBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                            <Setter TargetName="ClipGrid" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="OuterBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShinyTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" CornerRadius="3" BorderThickness="1" Padding="0" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}">
                        <Border CornerRadius="2" BorderThickness="1" Padding="0" BorderBrush="{DynamicResource ShinyTextBoxPrimaryBorderBrush}" Background="{DynamicResource ShinyTextBoxPrimaryBackgroundBrush}">
                            <Grid>
                                <Grid x:Name="HoverEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                      Margin="-1" Opacity="0">
                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Width="3" Height="3"
                                                Margin="0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="3"
                                                Margin="2,0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Right" VerticalAlignment="Top" Width="3"
                                                Height="3" Margin="0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="3"
                                                Margin="0,2">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="3"
                                                Height="3" Margin="0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="1,1" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="3"
                                                Margin="2,0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="3"
                                                Height="3" Margin="0">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="3"
                                                Margin="0,2">
                                        <Canvas.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                        </Canvas.Background>
                                    </Canvas>
                                </Grid>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="4"
                                        Background="White" Margin="1,2,1,0" />
                                <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddressBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" CornerRadius="11" BorderThickness="1" BorderBrush="{DynamicResource AddressBoxBorderBrush}">
                        <Border CornerRadius="10" BorderThickness="1" BorderBrush="{DynamicResource AddressBoxSecondaryBorderBrush}" Background="{DynamicResource AddressBoxSecondaryBackgroundBrush}">
                            <Grid>
                                <Border x:Name="IdleFill" BorderThickness="0" CornerRadius="9" Opacity="1" Background="{DynamicResource AddressBoxIdleFillBackgroundBrush}"/>
                                <Border x:Name="HoverFill" BorderThickness="0" CornerRadius="9" Opacity="0" Background="{DynamicResource AddressBoxHoverFillBackgroundBrush}"/>
                                <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverFill" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverFill" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion TextBox Styles-->


    <!--#region ComboBox Styles-->

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid>
                                            <Border Name="OuterBorder" CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" Background="{DynamicResource TextBoxPrimaryBackgroundBrush}" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}"/>
                                            <Border CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" BorderBrush="Transparent" ClipToBounds="True">
                                                <Border x:Name="ClipBorder" CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="0" Padding="0" Background="Transparent" BorderBrush="Transparent" ClipToBounds="True">
                                                    <Grid>
                                                        <Grid x:Name="ClipGrid" Margin="0" ClipToBounds="True">
                                                            <Grid.OpacityMask>
                                                                <VisualBrush>
                                                                    <VisualBrush.Visual>
                                                                        <Border Background="White" SnapsToDevicePixels="True" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}"/>
                                                                    </VisualBrush.Visual>
                                                                </VisualBrush>
                                                            </Grid.OpacityMask>
                                                            <Grid x:Name="IdleEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0.25">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="1,0.5" GradientOrigin="1,0.5" GradientStops="{DynamicResource TextBoxGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                                                                    <Canvas.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxGlowLinearGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="0,0.5" GradientOrigin="0,0.5" GradientStops="{DynamicResource TextBoxGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                            </Grid>
                                                            <Grid x:Name="HoverEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Opacity="0" ClipToBounds="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="1,0.5" GradientOrigin="1,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1">
                                                                    <Canvas.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowLinearGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2">
                                                                    <Canvas.Background>
                                                                        <RadialGradientBrush RadiusX="1.125" Center="0,0.5" GradientOrigin="0,0.5" GradientStops="{DynamicResource TextBoxHoverGlowRadialGradientStops}"/>
                                                                    </Canvas.Background>
                                                                </Canvas>
                                                            </Grid>
                                                        </Grid>
                                                        <Grid Margin="{TemplateBinding Padding}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="20" />
                                                            </Grid.ColumnDefinitions>
                                                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" IsTabStop="False" Grid.Column="0"/>
                                                            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 3.5 7 L 0 3 L 0 2 L 7 2 L 7 3 Z" Fill="{DynamicResource IconPathFillBrush}" Stroke="{DynamicResource IconPathStrokeBrush}" StrokeThickness="1"/>
                                                        </Grid>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                            <Border CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" Background="Transparent" BorderBrush="{DynamicResource TextBoxSecondaryBorderBrush}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsChecked" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <MultiTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.EnterActions>
                                                <MultiTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiTrigger.ExitActions>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                                                <Setter TargetName="ClipGrid" Property="Opacity" Value="0.5"/>
                                                <Setter TargetName="OuterBorder" Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}"/>
                        <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" Foreground="{TemplateBinding Foreground}"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsEnabled="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" VerticalOffset="-6">
                            <Grid ClipToBounds="True" Background="#01000000">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Opacity="0">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="PopupTranslateTransform" X="0" Y="-50"/>
                                    </Grid.RenderTransform>
                                    <DockPanel Margin="0,-6,0,0">
                                        <Grid x:Name="DropDownTopEdgeBorder" Height="9" ClipToBounds="True" DockPanel.Dock="Top" Panel.ZIndex="8" Margin="0,2,0,-2">
                                            <Border BorderThickness="8,0,8,8" BorderBrush="{DynamicResource DefaultWindowBodyBrush}" CornerRadius="0,0,8,8" Margin="-8,0,-8,-8"/>
                                            <Border BorderThickness="1,0,1,1" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}" CornerRadius="0,0,8,8"/>
                                            <Border BorderThickness="1,0" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}"/>
                                        </Grid>
                                        <Grid>
                                            <Border x:Name="DropDownBorder" BorderThickness="1,0,1,1" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}" Background="{DynamicResource DefaultWindowBodyBrush}"/>
                                            <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Grid>
                                    </DockPanel>
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0,0,8,8" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.0">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="DropDown" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PopupTranslateTransform" Storyboard.TargetProperty="Y" To="0" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetName="Popup" Storyboard.TargetProperty="IsOpen" Duration="0:0:0.125">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.125" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="DropDown" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.125" />
                                        <DoubleAnimation Storyboard.TargetName="PopupTranslateTransform" Storyboard.TargetProperty="Y" To="-50" Duration="0:0:0.125">
                                            <DoubleAnimation.EasingFunction>
                                                <QuinticEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="SelectedBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarToggleButtonSelectedBackground}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBackground" Background="Transparent" BorderBrush="{DynamicResource ToolbarButtonHoverPrimaryBorderBrush}" BorderThickness="1" CornerRadius="4" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="0,1,0,2" CornerRadius="2" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <!--VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFC5CBF9" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#FFDDDDDD" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups-->
                            
                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0625" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="{DynamicResource ToolbarButtonHoverForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ComboBox Styles-->

    
    <!--#region CheckBox Styles-->

    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="CheckBoxFrame" Width="13" Margin="0,0,5,0" DockPanel.Dock="Left">
                            <Border x:Name="IdleBackground" CornerRadius="2" Background="Transparent" BorderThickness="1"
                                BorderBrush="{DynamicResource CheckBoxBorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Visibility="Visible">
                                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="1" BorderThickness="1" BorderBrush="{DynamicResource CheckBoxSecondaryBorderBrush}" Background="{DynamicResource CheckBoxSecondaryBackgroundBrush}"/>
                            </Border>
                            <Grid x:Name="HoverEdge" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1"
                              Opacity="0">
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Width="3" Height="3"
                                                Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="3"
                                                Margin="2,0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Right" VerticalAlignment="Top" Width="3"
                                                Height="3" Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,1" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="3"
                                                Margin="0,2">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="3"
                                                Height="3" Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="1,1" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="3"
                                                Margin="2,0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="3"
                                                Height="3" Margin="0">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                                <Canvas HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="3"
                                                Margin="0,2">
                                    <Canvas.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" GradientStops="{DynamicResource TextBoxHoverGlowGradientStops}"/>
                                    </Canvas.Background>
                                </Canvas>
                            </Grid>
                            <Path x:Name="CheckMark" Data="M 0 4.391 L 2.821 8.206 L 8.613 0 L 7.840 0 L 2.821 5.248 L 0.655 4.391 Z" HorizontalAlignment="Center"
                              VerticalAlignment="Center" Fill="{DynamicResource CheckBoxCheckMarkBrush}" Stroke="{DynamicResource CheckBoxCheckMarkBrush}" StrokeThickness="1.125"
                              Opacity="0" /><!--Data="M 1 4 L 3 6 L 5 3 L 3 7 Z"-->
                            <Path x:Name="IndeterminateBox" Data="M 0.5 0.5 L 0.5 6 L 6 6 L 6 0.5 Z"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource CheckBoxCheckMarkBrush}" Stroke="{DynamicResource CheckBoxCheckMarkBrush}" StrokeThickness="1.25" Opacity="0" />
                        </Grid>
                        <ContentPresenter/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverEdge"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsThreeState" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IndeterminateBox"
                                                         Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckMark"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource CheckBoxDisabledForegroundBrush}"/>
                            <Setter TargetName="CheckBoxFrame" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion CheckBox Styles-->


    <!--#region ToggleSwitch Styles-->

    <Style x:Key="{x:Type local:ToggleSwitch}" TargetType="{x:Type local:ToggleSwitch}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource WindowForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource PlexFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToggleSwitch}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="25"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.TextAlignment="Center" IsHitTestVisible="False" TextBlock.FontSize="14" Grid.ColumnSpan="2" Grid.Row="0"/>
                        <TextBlock x:Name="PART_StateText" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Left" IsHitTestVisible="False" FontSize="14" Grid.Column="0" Grid.Row="1"/>
                        <Grid Grid.Column="1" Grid.Row="1" Background="#01000000">
                            <Border Name="Border" CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" BorderBrush="{DynamicResource TextBoxPrimaryBorderBrush}" HorizontalAlignment="Stretch" Height="24" VerticalAlignment="Center" Margin="-3,-2" IsHitTestVisible="False">
                                <Border CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource DoubleToFractionOfDoubleConverter}}" BorderThickness="1" Padding="0" Background="{DynamicResource TextBoxPrimaryBackgroundBrush}" BorderBrush="Transparent" ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  IsHitTestVisible="False"/>
                            </Border>
                            <StackPanel x:Name="PART_GripContainer" Orientation="Horizontal" Width="50" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas x:Name="PART_Offsetter" Width="{TemplateBinding OffsetterWidth}" MinWidth="0" MaxWidth="32"/>
                                <Button x:Name="PART_Grip" IsTabStop="False" Style="{DynamicResource RoundButtonStyle}" Width="18" Height="18" Margin="0" IsHitTestVisible="True"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ToggleSwitch Styles-->


    <!--#region Vertical ScrollBar Styles-->

    <Style x:Key="VerticalScrollBarLineUpButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="1,0,-1,0">
                        <Border Name="IdleArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 6 L 1 7 L 11 7 L 12 6 L 6 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Fill="{DynamicResource VerticalScrollbarArrowIdleFillBrush}" Stroke="{DynamicResource VerticalScrollbarArrowIdleStrokeBrush}"/>
                            </Grid>
                        </Border>
                        <Border Name="HoverArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 6 L 1 7 L 11 7 L 12 6 L 6 0 Z" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Fill="{DynamicResource VerticalScrollbarArrowHoverFillBrush}" Stroke="{DynamicResource VerticalScrollbarArrowHoverStrokeBrush}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="VerticalScrollBarLineDownButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="1,0,-1,0">
                        <Border Name="IdleArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 1 L 1 0 L 11 0 L 12 1 L 6 7 Z" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="1" Stroke="{DynamicResource VerticalScrollbarArrowIdleStrokeBrush}" Fill="{DynamicResource VerticalScrollbarArrowIdleFillBrush}"/>
                            </Grid>
                        </Border>
                        <Border Name="HoverArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 1 L 1 0 L 11 0 L 12 1 L 6 7 Z" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" StrokeThickness="1" Stroke="{DynamicResource VerticalScrollbarArrowHoverStrokeBrush}" Fill="{DynamicResource VerticalScrollbarArrowHoverFillBrush}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="3,0,-1,0">
                        <Border x:Name="IdleBackground" CornerRadius="0,6,6,0" BorderThickness="1" ClipToBounds="True" BorderBrush="{DynamicResource VerticalScrollbarArrowIdleStrokeBrush}" Background="{DynamicResource VerticalScrollBarThumbIdlePrimaryBackgroundBrush}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Canvas HorizontalAlignment="Right" Width="3" Margin="0,3" Background="{DynamicResource VerticalScrollBarThumbIdleSecondaryBackgroundBrush}"/>
                                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,3,0">
                                    <Rectangle Fill="Transparent" Height="5" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Height="4" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Height="4" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Height="4" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border x:Name="HoverBackground" CornerRadius="0,6,6,0" BorderThickness="1" ClipToBounds="True"
                                Opacity="0" BorderBrush="{DynamicResource VerticalScrollbarArrowHoverStrokeBrush}" Background="{DynamicResource VerticalScrollbarArrowHoverFillBrush}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource VerticalScrollBarThumbIdleSecondaryBackgroundBrush}">
                                <Canvas HorizontalAlignment="Right" Width="3" Margin="0,3" Background="{DynamicResource VerticalScrollbarThumbHoverBackgroundBrush}"/>
                                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,0,3,0">
                                    <Rectangle Fill="Transparent" Height="5" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Height="4" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Height="4" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Height="4" />
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Background="{DynamicResource VerticalScrollbarBottomRidgeBrush}"/>
                                    <Canvas HorizontalAlignment="Stretch" Height="1" Opacity="0.375" Background="{DynamicResource VerticalScrollbarTopRidgeBrush}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsDragging" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="22" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition Height="22" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="0" Background="{DynamicResource VerticalScrollbarTrackBackgroundBrush}">
                <Border.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.1" Color="Black" />
                            <GradientStop Offset="0.375" Color="#7F000000" />
                            <GradientStop Offset="1" Color="#00000000" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>
            <RepeatButton Grid.Row="0" Style="{DynamicResource VerticalScrollBarLineUpButton}"
                          VerticalAlignment="Stretch" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource VerticalScrollBarThumb}" Margin="0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource VerticalScrollBarLineDownButton}"
                          VerticalAlignment="Stretch" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <!--#endregion Vertical ScrollBar Styles-->


    <!--#region Horizontal ScrollBar Styles-->

    <Style x:Key="HorizontalScrollBarLineLeftButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="0,-1,0,1">
                        <Border Name="IdleArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 6 L 1 7 L 11 7 L 12 6 L 6 0 Z" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" StrokeThickness="1" Stroke="{DynamicResource HorizontalScrollbarArrowIdleStrokeBrush}" Fill="{DynamicResource HorizontalScrollbarArrowIdleFillBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="6" CenterY="6" Angle="-90" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                        <Border Name="HoverArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 6 L 1 7 L 11 7 L 12 6 L 6 0 Z" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" StrokeThickness="1" Stroke="{DynamicResource HorizontalScrollbarArrowHoverStrokeBrush}" Fill="{DynamicResource HorizontalScrollbarArrowHoverFillBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="6" CenterY="6" Angle="-90" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HorizontalScrollBarLineRightButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="0,-1,0,1">
                        <Border Name="IdleArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 1 L 1 0 L 11 0 L 12 1 L 6 7 Z" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" StrokeThickness="1" Stroke="{DynamicResource HorizontalScrollbarArrowIdleStrokeBrush}" Fill="{DynamicResource HorizontalScrollbarArrowIdleFillBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="6" CenterY="6" Angle="-90" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                        <Border Name="HoverArrow" Margin="0" CornerRadius="0" Background="Transparent"
                                BorderBrush="Transparent" BorderThickness="0">
                            <Grid>
                                <Path Data="M 0 1 L 1 0 L 11 0 L 12 1 L 6 7 Z" HorizontalAlignment="Center"
                                      VerticalAlignment="Center" StrokeThickness="1" Stroke="{DynamicResource HorizontalScrollbarArrowHoverStrokeBrush}" Fill="{DynamicResource HorizontalScrollbarArrowHoverFillBrush}">
                                    <Path.RenderTransform>
                                        <RotateTransform CenterX="6" CenterY="6" Angle="-90" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverArrow"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,2,0,-1">
                        <Border x:Name="IdleBackground" CornerRadius="0,0,6,6" BorderThickness="1" ClipToBounds="True" BorderBrush="{DynamicResource HorizontalScrollbarArrowIdleStrokeBrush}" Background="{DynamicResource HorizontalScrollBarThumbIdlePrimaryBackgroundBrush}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource HorizontalScrollBarThumbIdleSecondaryBackgroundBrush}">
                                <Canvas VerticalAlignment="Bottom" Height="3" Margin="3,0" Background="{DynamicResource HorizontalScrollbarThumbHoverBackgroundBrush}"/>
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="0,0,0,3" Orientation="Horizontal">
                                    <Rectangle Fill="Transparent" Width="5" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Width="4" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Width="4" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Width="4" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border x:Name="HoverBackground" CornerRadius="0,0,6,6" BorderThickness="1" ClipToBounds="True" Opacity="0" BorderBrush="{DynamicResource HorizontalScrollbarArrowHoverStrokeBrush}" Background="{DynamicResource HorizontalScrollbarArrowHoverFillBrush}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource HorizontalScrollBarThumbIdleSecondaryBackgroundBrush}">
                                <Canvas HorizontalAlignment="Right" Width="3" Margin="0,3" Background="{DynamicResource HorizontalScrollbarThumbHoverBackgroundBrush}"/>
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Stretch" Margin="0,0,0,3"
                                            Orientation="Horizontal">
                                    <Rectangle Fill="Transparent" Width="5" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Width="4" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Width="4" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Rectangle Fill="Transparent" Width="4" />
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Background="{DynamicResource HorizontalScrollbarBottomRidgeBrush}"/>
                                    <Canvas VerticalAlignment="Stretch" Width="1" Opacity="0.375" Background="{DynamicResource HorizontalScrollbarTopRidgeBrush}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsDragging" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="1"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground"
                                                         Storyboard.TargetProperty="Opacity" To="0"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="22" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition Width="22" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="0" Background="{DynamicResource HorizontalScrollbarTrackBackgroundBrush}">
                <Border.OpacityMask>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.1" Color="Black" />
                            <GradientStop Offset="0.375" Color="#7F000000" />
                            <GradientStop Offset="1" Color="#00000000" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>
            <RepeatButton Grid.Column="0" Style="{DynamicResource HorizontalScrollBarLineLeftButton}" Width="18"
                          Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource HorizontalScrollBarThumb}" Margin="0,1,0,1" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{DynamicResource HorizontalScrollBarLineRightButton}" Width="18"
                          Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <!--#endregion Horizontal ScrollBar Styles-->


    <!--#region ScrollBar and ScrollViewer Styles-->


    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="0" CornerRadius="0" Background="Transparent"
                            BorderBrush="Transparent" BorderThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="17" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="17" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlexScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch" Margin="-4" />
                        <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" Grid.Column="1"
                                   HorizontalAlignment="Right"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar" Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" Grid.Row="1" Orientation="Horizontal"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Padding" Value="4,4,12,4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource PlexScrollViewerStyle}"/>

    <!--#endregion ScrollBar and ScrollViewer Styles-->
    
    
    <!--#region TabItem and TabControl Styles-->

    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonIdleForegroundBrush}"/>
        <Setter Property="Margin" Value="0,2,0,-1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="IdleBackground" BorderBrush="{DynamicResource GroupBoxOuterBorderBrush}" CornerRadius="3,3,0,0" BorderThickness="1" Margin="0,0,0,1" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Border Background="{DynamicResource TabItemIdleBackgroundBrush}" BorderBrush="{DynamicResource GroupBoxInnerBorderBrush}" CornerRadius="2,2,0,0" BorderThickness="1,1,1,0"/>
                        </Border>
                        <Rectangle x:Name="BaseRectangle" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Fill="{DynamicResource GroupBoxInnerBorderBrush}" Height="1" Margin="1,0"/>
                        <Border x:Name="HoverBackground" BorderBrush="{DynamicResource GroupBoxOuterBorderBrush}" CornerRadius="3,3,0,0" BorderThickness="1" Margin="0,0,0,1" UseLayoutRounding="True" SnapsToDevicePixels="True" Opacity="0">
                            <Border BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource ToolbarButtonHoverSecondaryBorderBrush}">
                                <Border BorderThickness="1,1,0,0" CornerRadius="2,2,0,0" Background="{DynamicResource ToolbarButtonHoverTertiaryBackgroundBrush}" BorderBrush="{DynamicResource ToolbarButtonHoverTertiaryBorderBrush}"/>
                            </Border>
                        </Border>
                        <Border x:Name="SelectedBackground" BorderBrush="{DynamicResource GroupBoxOuterBorderBrush}" CornerRadius="3,3,0,0" BorderThickness="1,1,1,0">
                            <Border BorderBrush="{DynamicResource GroupBoxInnerBorderBrush}" CornerRadius="2,2,0,0" BorderThickness="1,1,1,0"/>
                        </Border>
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="5" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="BaseRectangle" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="BaseRectangle" Property="Margin" Value="1,0"/>
                            
                            <Setter TargetName="IdleBackground" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IdleBackground" Property="Margin" Value="0,0,0,1"/>
                            <Setter TargetName="HoverBackground" Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Margin" Value="-2,0,-2,-1"/>
                            <Setter Property="Padding" Value="6,5"/>
                            <Setter Property="Panel.ZIndex" Value="9999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="20"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{DynamicResource GroupBoxOuterBorderBrush}" BorderThickness="0,1,0,0" CornerRadius="0,11,0,0" Width="12" Height="12" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="1"/>
                        <DockPanel x:Name="TabsDockPanel" Margin="3,0,11,0">
                            <TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" IsItemsHost="True" Margin="-1,0,0,0" VerticalAlignment="Stretch" KeyboardNavigation.TabIndex="1" Grid.Row="0" DockPanel.Dock="Left"/>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,0,0,-2">
                                <Rectangle Fill="{DynamicResource GroupBoxOuterBorderBrush}" Height="1"/>
                                <Rectangle Fill="{DynamicResource GroupBoxInnerBorderBrush}" Height="1"/>
                            </StackPanel>
                        </DockPanel>
                        <Border x:Name="OuterBorder" BorderBrush="{DynamicResource GroupBoxOuterBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="11" Grid.Row="1">
                            <Border x:Name="InnerBorder" BorderBrush="{DynamicResource GroupBoxInnerBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="10"/>
                        </Border>
                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" Grid.Row="1" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedIndex" Value="0">
                            <!--Setter TargetName="TabsDockPanel" Property="Margin" Value="0,0,3,0"/-->
                            <Setter TargetName="OuterBorder" Property="CornerRadius" Value="0,11,11,11"/>
                            <Setter TargetName="InnerBorder" Property="CornerRadius" Value="0,10,10,10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexGlowTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UniformGrid}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Margin="0,0,0,1">
                        <Border x:Name="HoverBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="SelectedBackground" Background="{DynamicResource PlexGlowToggleButtonHoverBackground}" BorderBrush="{DynamicResource PlexGlowToggleButtonHoverBorderBrush}" BorderThickness="2" Opacity="0">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                        <GradientStop Offset="0.875" Color="#FF000000"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlexGlowTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}" BasedOn="{StaticResource PlexGlowTabItemStyle}"/>
                    </ControlTemplate.Resources>
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Border x:Name="ToolBarBorder" CornerRadius="8,8,0,0" BorderThickness="1,1,1,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource WindowToolbarBackgroundBrush}" BorderBrush="{DynamicResource WindowToolbarBorderBrush}">
                                <Border x:Name="ToolBarSecondaryBorder" CornerRadius="8,8,0,0"
                                                    BorderThickness="0,1,0,0" Background="{DynamicResource WindowToolbarSecondaryBackgroundBrush}"
                                                    BorderBrush="{DynamicResource WindowToolbarSecondaryBorderBrush}" />
                            </Border>
                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="0" Background="{DynamicResource WindowToolbarBackgroundBrush}"/>
                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="1" Background="{DynamicResource WindowToolbarTertiaryBackgroundBrush}"/>
                            <Canvas Height="1" VerticalAlignment="Bottom" Margin="2" Background="{DynamicResource WindowToolbarQuarternaryBackgroundBrush}"/>
                        </Grid>
                        <UniformGrid x:Name="HeaderPanel" Panel.ZIndex="1" IsItemsHost="True" VerticalAlignment="Stretch" Rows="1" KeyboardNavigation.TabIndex="1" Grid.Row="0"/>
                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Grid.Row="1" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion TabItem and TabControl Styles-->

    
    <!--#region Separator Styles-->

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource SeparatorBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="1" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}">
                        <Rectangle.OpacityMask>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#00FFFFFF"/>
                                    <GradientStop Offset="0.25" Color="#FFFFFFFF"/>
                                    <GradientStop Offset="0.75" Color="#FFFFFFFF"/>
                                    <GradientStop Offset="1" Color="#00FFFFFF"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion Separator Styles-->

    
    <!--#region GroupBox Styles-->

    <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="2" BorderBrush="{DynamicResource GroupBoxOuterBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="8,8,0,0" ClipToBounds="True">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Offset="0.25" Color="Black"/>
                                        <GradientStop Offset="0.875" Color="Transparent"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border BorderBrush="{DynamicResource GroupBoxInnerBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="7,7,0,0"/>
                        </Border>
                        <Border Background="{DynamicResource GroupBoxHeaderBackgroundBrush}" BorderBrush="Transparent" BorderThickness="2,2,2,0" CornerRadius="6,6,0,0" Grid.Row="0">
                            <ContentPresenter Margin="10,5" ContentSource="Header" TextBlock.Foreground="{DynamicResource GroupBoxHeaderForegroundBrush}" RecognizesAccessKey="True"/>
                        </Border>
                        <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion GroupBox Styles-->
</ResourceDictionary>